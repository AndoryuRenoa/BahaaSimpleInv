{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/messanger.service.ts","webpack:///./src/app/print-report.service.ts","webpack:///./src/app/receiving/receiving.component.css","webpack:///./src/app/receiving/receiving.component.html","webpack:///./src/app/receiving/receiving.component.ts","webpack:///./src/app/top/top.component.css","webpack:///./src/app/top/top.component.html","webpack:///./src/app/top/top.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-top></app-top>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BahaaSimpleInvFront';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TopComponent } from './top/top.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { ReceivingComponent } from './receiving/receiving.component';\n\nconst appRoutes: Routes = [\n  {path: 'mainmenu', component: MenuComponent},\n  {path: '',   redirectTo: '/mainmenu', pathMatch: 'full' },\n  {path: 'reader', component: ReceivingComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopComponent,\n    MenuComponent,\n    ReceivingComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    ReactiveFormsModule,FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\t\\r\\n\\tposition: relative;\\r\\n\\tmax-width: 100%;\\r\\n\\theight: auto;\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: row;\\r\\n\\tjustify-content: center;\\r\\n\\tpadding: 5px;\\r\\n}\\r\\n    \\r\\n.selector, .right{\\r\\n\\t  flex: 1;\\r\\n}\"","module.exports = \"<div> \\n    <div class =\\\"container\\\" >\\n        <div class=\\\"selector\\\" id=\\\"selector\\\"> \\n          <div class= \\\"selectorimg\\\" id=\\\"selectorimg\\\" ></div>\\n        </div>\\n        <div class=\\\"option1\\\" id=\\\"option1\\\">\\n          <a [routerLink]=\\\"['/reader']\\\">          \\n          <div  style=\\\"float: right;\\n            background-color: rgb(49, 54, 49);\\n            border: none;\\n            color: white;\\n            padding: 20px;\\n            text-align: center;\\n            text-decoration: none;\\n            display: inline-block;\\n            font-size: 40x;\\n            margin: 4px 2px;\\n            cursor: pointer;\\\">\\n            Barcode Reader\\n           </div>\\n            </a>\\n          </div>\\n        <div class = \\\"right\\\"> \\n      </div>\\n    </div>\\n    <div class =\\\"container\\\" >\\n        <div class=\\\"selector\\\" id=\\\"selector\\\"> \\n          <div class= \\\"selectorimg\\\" id=\\\"selectorimg\\\" ></div>\\n        </div>\\n        <div class=\\\"option1\\\" id=\\\"option1\\\">\\n          <div style = \\\"text-align: right; cursor: pointer; color:black;\\\"  (click)= \\\"printReport()\\\">          \\n          <div  style=\\\"float: right;\\n            background-color: rgb(49, 54, 49);\\n            border: none;\\n            color: white;\\n            padding: 20px;\\n            text-align: center;\\n            text-decoration: none;\\n            display: inline-block;\\n            font-size: 40x;\\n            margin: 4px 2px;\\n            cursor: pointer;\\\">\\n            Print Report on Desktop\\n           </div>\\n            </div>\\n          </div>\\n        <div class = \\\"right\\\"> \\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {PrintReportService} from '../print-report.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private report: PrintReportService) { }\n\n  ngOnInit() {\n  }\n\n  printReport(){\n    console.log(\"attempting to print\");\n    this.report.requestReport();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Subject } from \"rxjs\";\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessangerService {\n  private messageURL = \"/api/newReceiving\"\n  private unableToSendMessage = new Subject<boolean>();\n  private messageSent = new Subject<boolean>();\n  private submitted = new Subject<boolean>();\n  private vendor = new Subject<String>();\n  \n  \n\n  constructor(private http : HttpClient, private router: Router) { }\n\n  attemptSendMessage(message, callback){\n\n    this.http.post(this.messageURL, message, {headers: new HttpHeaders(), responseType: 'text' as 'text'})\n    .subscribe((res) =>{\n    console.log('attempting to send '+message as 'JSON');  \n    console.log(res);\n    if (!(res == \"success!\")){\n      this.setUnableToSendMessage(true);\n    } else{\n      this.setMessageSent(true);\n      this.setSubmitted(false);\n      this.router.navigate(['/']);\n    }\n    });\n    this.setMessageSent(true);\n    this.setSubmitted(false);\n\n    return callback && callback();\n\n  }\n\n\n  setUnableToSendMessage (unableToSendMessage: boolean){\n    this.unableToSendMessage.next(unableToSendMessage);\n  }\n\n  getUnableToSendMessage(){\n    return this.unableToSendMessage.asObservable();\n  }\n  setMessageSent (unableToSendMessage: boolean){\n    this.messageSent.next(unableToSendMessage);\n  }\n\n  getMessageSent(){\n    return this.messageSent.asObservable();\n  }\n  setSubmitted (unableToSendMessage: boolean){\n    this.submitted.next(unableToSendMessage);\n  }\n\n  getSubmitted(){\n    return this.submitted.asObservable();\n  }\n  setVendor(vendor: String){\n    this.vendor.next(vendor);\n  }\n  getVendor(){\n    return this.vendor.asObservable();\n  }\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Config } from 'protractor';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintReportService {\n\n  constructor(private http: HttpClient) { }\n\n\n  requestReport(){\n    this.http.get('/api/printReport', {headers: new HttpHeaders(), responseType: 'text' as 'text'}).subscribe((res) =>{  \n      console.log(res);\n    });\n  }\n}\n","module.exports = \".redError{\\r\\n    color: red;\\r\\n}\\r\\nh1{\\r\\n    color: black\\r\\n}\\r\\n.styleButton {\\r\\n    background-color: white; \\r\\n    border: 2px solid #4CAF50;\\r\\n    color: black;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    font-size: 16px;\\r\\n    margin: 4px 2px;\\r\\n    cursor: pointer;\\r\\n    border-radius: 24px;\\r\\n    width: 30%;\\r\\n}\\r\\n.selectedButton{\\r\\n    background-color: green; \\r\\n    border: 2px solid #4CAF50;\\r\\n    color: black;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    font-size: 16px;\\r\\n    margin: 4px 2px;\\r\\n    cursor: pointer;\\r\\n    border-radius: 24px;\\r\\n    width: 30%;\\r\\n\\r\\n}\"","module.exports = \"<div class='mobileScale'>\\n<div class = 'formStyle'>\\n<div *ngIf =\\\"unableToSendMessage;\\\"><h1>Recorded</h1></div>\\n<div *ngIf =\\\"messageSent && !unableToSendMessage\\\"><h1>Recorded</h1></div>\\n\\n<div *ngIf =\\\"!loggedIn;\\\"> \\n  <h2> Please input </h2>\\n  <form #thisForm= \\\"ngForm\\\" (ngSubmit)=\\\"sendMessage(); resetFormLite();\\\" [formGroup]=\\\"messageFormNotLoggedIn\\\">\\n      Vendor: <p></p>\\n      <div *ngIf=\\\"submitted && fnli.vendor.errors?.required\\\" class=\\\"redError\\\">**Vendor Required**</div>\\n      <input  type=\\\"text\\\" formControlName=\\\"vendor\\\" class=\\\"form-control\\\" value={{vendorInput}}>\\n      Invoice Number: <p></p>\\n      <div *ngIf=\\\"submitted && fnli.quantity.errors?.required\\\" class=\\\"redError\\\">**Invoice Number Required**</div>\\n      <input  type=\\\"text\\\" formControlName=\\\"invoiceNumber\\\" class=\\\"form-control\\\">\\n      <div style = \\\"text-align: center\\\">\\n        <div *ngIf=\\\"submitted && missingUnitSelection\\\" class =\\\"redError\\\"> **Select Unit Type</div>\\n        <div *ngIf=\\\"!caseSelected\\\" class=\\\"styleButton\\\" (click)=\\\"selectCase()\\\"> Case</div>\\n        <div *ngIf=\\\"caseSelected\\\" class=\\\"selectedButton\\\" (click)=\\\"selectCase()\\\"> Case</div>\\n        <div *ngIf= \\\"!eachSelected\\\" class=\\\"styleButton\\\"(click)=\\\"selectSingle()\\\"> Each</div>\\n        <div *ngIf= \\\"eachSelected\\\" class=\\\"selectedButton\\\" (click)=\\\"selectSingle()\\\"> Each</div>\\n      </div>\\n      <br>\\n      Quantity: <p></p>\\n      <div *ngIf=\\\"submitted && fnli.quantity.errors?.required\\\" class=\\\"redError\\\">**Quantity Required**</div>\\n      <input  type=\\\"text\\\" formControlName=\\\"quantity\\\" class=\\\"form-control\\\" id=\\\"quantity\\\">\\n      <p></p>\\n      Vendor Item Number (Optional): <p></p>\\n      <div *ngIf=\\\"submitted && fnli.itemVendNo.errors?.required\\\" class=\\\"redError\\\">**Item Vendor Number Required**</div>\\n      <input  type=\\\"text\\\" formControlName=\\\"itemVendNo\\\" class=\\\"form-control\\\">\\n      Barcode: <p></p>\\n      <div *ngIf=\\\"submitted && fnli.barcode.errors?.required\\\" class=\\\"redError\\\">**Barcode Required**</div>\\n      <input  type=\\\"text\\\" formControlName=\\\"barcode\\\" class=\\\"form-control\\\">  \\n      <p></p>\\n      <button type=\\\"submit\\\"> Submit Received </button>\\n  </form>\\n  <p></p>\\n  <p></p>\\n  <a [routerLink] = \\\"['/']\\\">\\n    <button > Return to Main Menu </button> \\n  </a>\\n</div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MessangerService} from '../messanger.service';\n\n@Component({\n  selector: 'app-receiving',\n  templateUrl: './receiving.component.html',\n  styleUrls: ['./receiving.component.css']\n})\nexport class ReceivingComponent implements OnInit {\n  private unableToSendMessage: boolean = false;\n  submitted : boolean = false;\n  messageSent : boolean = false;\n  caseSelected: boolean = false;\n  eachSelected: boolean = false;\n  missingUnitSelection: boolean = true;\n  vendorInput: String ='';\n\n  messageFormNotLoggedIn: FormGroup;\n\n  message= {barcode: '', vendor: '', itemVendNo: '', numberofCases:'', numberofSingles:'', invoiceNumber:'' };\n\n  constructor( private formBuilder: FormBuilder, private messangerService : MessangerService) { }\n\n  ngOnInit() {\n    this.messageFormNotLoggedIn = this.formBuilder.group({\n      barcode: ['', Validators.required],\n      vendor: ['', [Validators.required]],\n      itemVendNo: [''],\n      quantity: ['', [Validators.required]],\n      invoiceNumber: ['', [Validators.required]]\n      });\n    this.messangerService.getUnableToSendMessage().subscribe(res => this.unableToSendMessage = res);\n    this.messangerService.getMessageSent().subscribe(res => this.messageSent = res);\n    this.messangerService.getSubmitted().subscribe(res => this.submitted = res);\n    this.messangerService.getVendor().subscribe(res=> this.vendorInput = res);\n  }\n\n  get fnli(){ return this.messageFormNotLoggedIn.controls}\n\n  sendMessage(){\n    this.messangerService.setSubmitted(true);\n    this.messangerService.setVendor(this.fnli.vendor.value);\n    if (this.missingUnitSelection){\n      return;\n    }\n    if(this.caseSelected){\n      this.message = { \n          barcode: this.fnli.barcode.value, \n          vendor: this.fnli.vendor.value,\n          itemVendNo: this.fnli.itemVendNo.value,\n          numberofCases: this.fnli.quantity.value,\n          numberofSingles: 'null',\n          invoiceNumber: this.fnli.invoiceNumber.value\n        };\n      }\n      if(this.eachSelected){\n        this.message = { \n          barcode: this.fnli.barcode.value, \n          vendor: this.fnli.vendor.value,\n          itemVendNo: this.fnli.itemVendNo.value,\n          numberofCases: 'null',\n          numberofSingles: this.fnli.quantity.value,\n          invoiceNumber: this.fnli.invoiceNumber.value\n        };\n      }\n      if(this.messageFormNotLoggedIn.invalid){\n        return;\n      }\n      \n      \n      return this.messangerService.attemptSendMessage(this.message, ()=>{});\n\n  }\n\n  resetFormLite(){\n    this.messageFormNotLoggedIn.controls['quantity'].setValue(null);\n    this.selectNiether();\n  }\n\n  selectCase(){\n    this.caseSelected=true;\n    this.eachSelected=false;\n    this.missingUnitSelection=false;\n    this.messageFormNotLoggedIn.controls['barcode'].setValue(null);\n    this.focusTo(\"quantity\");\n\n  }\n  selectSingle(){\n    this.caseSelected=false;\n    this.eachSelected=true;\n    this.missingUnitSelection=false;\n    this.messageFormNotLoggedIn.controls['barcode'].setValue(null);\n    this.focusTo(\"quantity\");\n  }\n  selectNiether(){\n    this.caseSelected=false;\n    this.eachSelected=false;\n    this.missingUnitSelection=true;\n  }\n\n  focusTo(idName: string):void {\n    let element = document.getElementById(idName);\n    \n    element.focus();\n }\n\n    \n\n}","module.exports = \"img {\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    max-width: 20%;\\r\\n}\"","module.exports = \"<div style =\\\"background-color: maroon\\\"><img src = \\\"assets/lyonsDenType.png\\\"> </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.css']\n})\nexport class TopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}